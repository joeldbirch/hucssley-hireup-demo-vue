@mixin hu-pseudo($class-name, $pseudos, $modules) {
  @each $module in hu-format-modules($modules) {
    @each $pseudo in $pseudos {
      $pseudo-class-name: #{pseudo}-#{hu-string-replace($pseudo, ":", "")};

      @if ($module == base) {
        .#{$pseudo-class-name}--#{$class-name}#{$pseudo} {
          @content;
        }
      }

      @else if ($module == focus) {
        #{$hu-hocus-focus-prefix} .focus-#{$pseudo-class-name}--#{$class-name}#{$hu-hocus-focus-pseudo}#{$pseudo} {
          @content;
        }
      }

      @else if ($module == hover) {
        .hover-#{$pseudo-class-name}--#{$class-name}:hover#{$pseudo} {
          @content;
        }
      }

      @else if ($module == hocus) {
        #{$hu-hocus-focus-prefix} .hocus-#{$pseudo-class-name}--#{$class-name}#{$hu-hocus-focus-pseudo}#{$pseudo},
        .hocus-#{$pseudo-class-name}--#{$class-name}:hover#{$pseudo} {
          @content;
        }
      }

      @else if ($module == state) {
        @each $state in $hu-states {
          .#{$state}.#{$state}-#{$pseudo-class-name}--#{$class-name}#{$pseudo} {
            @content;
          }
        }
      }

      @else if ($module == group-hover) {
        .group:hover .group__hover-#{$pseudo-class-name}--#{$class-name}#{$pseudo} {
          @content;
        }
      }

      @else if ($module == group-state) {
        @each $state in $hu-states {
          .group.#{$state} .group__#{$state}-#{$pseudo-class-name}--#{$class-name}#{$pseudo} {
            @content;
          }
        }
      }

      @else if ($module == reduced-motion) {
        @media (prefers-reduced-motion: reduce) {
          .reduced-motion-#{$pseudo-class-name}--#{$class-name}#{$pseudo} {
            @include hu-bump-specificity {
              @content;
            }
          }
        }
      }

      @else if ($module == print) {
        @media print {
          .print-#{$pseudo-class-name}--#{$class-name}#{$pseudo} {
            @include hu-bump-specificity {
              @content;
            }
          }
        }
      }
    }
  }
}
@each $module in hu-format-modules($hu-margin-modules) {
  @each $type, $properties in $hu-margin-types {
    @each $scale, $value in $hu-margin-scale {
      $class-name: hu-class-name(#{$type}-#{$scale});
      $class-name-negative: hu-class-name(#{$type}-n#{$scale});

      @if ($module == base) {
        @include hu-base($class-name) {
          @each $property in $properties {
            #{$property}: $value;
          }
        }

        @if (type-of($value) == number) {
          @include hu-base($class-name-negative) {
            @each $property in $properties {
              #{$property}: $value * -1;
            }
          }
        }
      }

      @else if ($module == focus or $module == hocus or $module == hover) {
        @include hu-hocus($class-name, $module) {
          @each $property in $properties {
            #{$property}: $value;
          }
        }

        @if (type-of($value) == number) {
          @include hu-hocus($class-name-negative) {
            @each $property in $properties {
              #{$property}: $value * -1;
            }
          }
        }
      }

      @else if ($module == state) {
        @include hu-state($class-name) {
          @each $property in $properties {
            #{$property}: $value;
          }
        }

        @if (type-of($value) == number) {
          @include hu-state($class-name-negative) {
            @each $property in $properties {
              #{$property}: $value * -1;
            }
          }
        }
      }

      @else if ($module == group-hover) {
        @include hu-group-hover($class-name) {
          @each $property in $properties {
            #{$property}: $value;
          }
        }

        @if (type-of($value) == number) {
          @include hu-group-hover($class-name-negative) {
            @each $property in $properties {
              #{$property}: $value * -1;
            }
          }
        }
      }

      @else if ($module == group-state) {
        @include hu-group-state($class-name) {
          @each $property in $properties {
            #{$property}: $value;
          }
        }

        @if (type-of($value) == number) {
          @include hu-group-state($class-name-negative) {
            @each $property in $properties {
              #{$property}: $value * -1;
            }
          }
        }
      }

      @else if ($module == print) {
        @include hu-print($class-name) {
          @each $property in $properties {
            #{$property}: $value;
          }
        }

        @if (type-of($value) == number) {
          @include hu-print($class-name-negative) {
            @each $property in $properties {
              #{$property}: $value * -1;
            }
          }
        }
      }
    }
  }
}

@if index($hu-margin-modules, responsive) {
  @each $bp-scale, $bp-value in $hu-breakpoints {
    @media (min-width: $bp-value) {
      @each $scale, $value in $hu-margin-scale {
        @each $type, $properties in $hu-margin-types {
          $class-name: hu-class-name(#{$type}-#{$scale});
          $class-name-negative: hu-class-name(#{$type}-n#{$scale});

          @include hu-responsive-base($class-name, $bp-scale) {
            @each $property in $properties {
              #{$property}: $value;
            }
          }

          @if (type-of($value) == number) {
            @include hu-responsive-base($class-name-negative, $bp-scale) {
              @each $property in $properties {
                #{$property}: $value * -1;
              }
            }
          }

          @if (index($hu-margin-modules, state)) {
            @include hu-responsive-state($class-name, $bp-scale) {
              @each $property in $properties {
                #{$property}: $value;
              }
            }

            @if (type-of($value) == number) {
              @include hu-responsive-state($class-name-negative, $bp-scale) {
                @each $property in $properties {
                  #{$property}: $value * -1;
                }
              }
            }
          }

          @if (index($hu-margin-modules, group-state)) {
            @include hu-responsive-group-state($class-name, $bp-scale) {
              @each $property in $properties {
                #{$property}: $value;
              }
            }

            @if (type-of($value) == number) {
              @include hu-responsive-group-state($class-name-negative, $bp-scale) {
                @each $property in $properties {
                  #{$property}: $value * -1;
                }
              }
            }
          }
        }
      }
    }
  }
}